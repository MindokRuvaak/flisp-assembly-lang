{
    "scopeName": "source.FLISPAssembly",
    "name": "FLISPAssembly",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#instruction"
        },
        {
            "include": "#symbol"
        },
        {
            "include": "#numeric"
        }
    ],
    "repository": {
        "comments": {
            "name": "lineComment.FLISPAssembly",
            "match": "\\;.*"
        },
        "instruction": {
            "name": "instruction.FLISPAssembly",
            "begin": "(?<!^)\\b[A-Z]{3,5}\\b",
            "end": "\\n|;",
            "patterns": [
                {
                    "include": "#inherentInstruction"
                },
                {
                    "include": "#ImmediateDataInstruction"
                },
                {
                  "include": "#AbsoluteAdressInstruction"
                },
                {
                    "include": "PCRelativeInstruction"
                }
            ]
        },
        "symbol": {
            "name": "symbol.FLISPAssembly", 
            "patterns": [
                {
                    "include": "#definition"
                },
                {
                    "include": "#symbolName"
                }
            ]
        },
        "definition": {
            "name": "definition.symbol.FLISPAssembly",
            "match": "\\b^[a-z_][a-zA-Z_.0-9$]*\\b:"
        },
        "symbolName": {
            "name": "symbolName.symbol.FLISPAssembly",
            "match": "(?<!^)\\b[a-z_][a-zA-Z_.0-9$]*(?=\\s*?$)" 
        },
        "numeric": {
            "name": "numeric.FLISPAssembly",
            "patterns": [
                {
                    "include": "#hexadecimal"
                },
                {
                    "include": "#decimal"
                },
                {
                    "include": "#binary"
                }
            ]
        },
        "hexadecimal": {
            "name": "hexadecimal.numeric.FLISPAssembly",
            "match" : "(?<!-|^)(?<=\\s|#|,)\\$[A-F0-9]{1,2}\\b"
        },
        "decimal": {
            "name": "decimal.numeric.FLISPAssembly",
            "match": "(?<!-|^)(?<=\\s|#|,)\\b((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([1-9][0-9])|([0-9]))\\b"
        },
        "binary": {
            "name": "binary.numeric.FLISPAssembly",
            "match": "(?<!-|^)(?<=\\s|#|,)\\%[01]{1,8}\\b"
        },
        "immediateData": {
            "name": "imData.operand.FLISPAssembly",
            "begin": "\\#",
            "end": "\\s",
            "patterns": [
                {
                    "include": "#numeric"
                },
                {
                    "include": "#symbolName"
                }
            ]
        },
        "absoluteAdress":
        {
            "name": "abAdress.operand.FLISPAssembly",
            "begin": "[a-z_\\$]",
            "ends": "\\s",
            "patterns": [
                {
                    "include": "#hexadecimal"
                },
                {
                    "include": "#symbolName"
                }
            ]
        },
        "pcRelative": 
        {
            "name": "pcRelative.operand.FLISPAssembly",
            "patterns": [
                {
                    "include": "#numeric"
                },
                {
                    "include": "#symbolName"
                }
            ]
        },
        "indexed":
        {
            "name": "indexed.operand.FLISPAssembly",
            "patterns": [
                {
                    "include": "#nStackPointer"
                },
                {
                    "include": "#nRegistry"
                },
                {
                    "include": "#aRegistry"
                },
                {
                    "include": "#preIncrementRegistry"
                },
                {
                    "include": "#preDecrementRegistry"
                },
                {
                    "include": "#postIncrementRegistry"
                },
                {
                    "include": "#postDecrementRegistry"
                }
            ]
        },
        "nStackPointer": {
            "name": "nStackPointer.indexed.operand.FLISPAssembly",
            "match": "(.*)(,SP\\b)",
            "captures": {
                "1": {"name": "numeric.FLISPAssembly"}
            }
        }
    }
}